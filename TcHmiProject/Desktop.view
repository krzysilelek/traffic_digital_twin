<div id="Desktop" data-tchmi-type="TcHmi.Controls.System.TcHmiView" data-tchmi-top="0" data-tchmi-left="0" data-tchmi-width-mode="Content" data-tchmi-min-width="100" data-tchmi-min-width-unit="%" data-tchmi-height-mode="Content" data-tchmi-min-height="100" data-tchmi-min-height-unit="%" data-tchmi-creator-viewport-width="1024" data-tchmi-creator-viewport-height="800" data-tchmi-background-image-horizontal-alignment="Center" data-tchmi-background-image-vertical-alignment="Center" data-tchmi-zindex="2">
  <div id="ViewDesktopBeckhoffLogo" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiImage" data-tchmi-src="Images/Beckhoff_Logo.svg" data-tchmi-left="4" data-tchmi-top="4" data-tchmi-width="194" data-tchmi-height="57" data-tchmi-zindex="3">

  </div>



<script data-tchmi-target-attribute="data-tchmi-background-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 1)"
}
</script>
<div id="TcHmiButton_1" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="438" data-tchmi-left-unit="px" data-tchmi-text="Table View" data-tchmi-top="10" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-zindex="1">

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_1.onPressed",
    "actions": [
      {
        "objectType": "JavaScript",
        "active": false,
        "sourceLines": [
          "var wait = (ms) => {",
          "    const start = Date.now();",
          "    let now = start;",
          "    while (now - start < ms) {",
          "      now = Date.now();",
          "    }",
          "}",
          "",
          "function checkEnd(){",
          "\tlet check = new TcHmi.Symbol('%s%PLC1.MAIN.bShouldCalculate%/s%');",
          "\tcheck.readEx(function (data) {",
          "    \tif (data.error === TcHmi.Errors.NONE) {",
          "\t    \tif(data.value == true){",
          "\t\t\t\twait(100);",
          "\t\t\t\tcheckEnd();\t\t\t\t",
          "\t        }        \t\t",
          "    \t}                    \t",
          "\t});",
          "}",
          "",
          "let neededDistances = new Array();",
          "let letters = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\"];",
          "which_entrance = 1;",
          "",
          "for(var j = 0; j < 8; j++){",
          "\tlet x = j;",
          "\tTcHmi.Symbol.writeEx('%s%PLC1.GLOBALS.nStartPosition%/s%', which_entrance);",
          "\tTcHmi.Symbol.writeEx('%s%PLC1.MAIN.bShouldCalculate%/s%', true);",
          "\twhich_entrance += 2;",
          "\t",
          "\tcheckEnd();",
          "\t",
          "\tlet allDistances = new TcHmi.Symbol('%s%PLC1.GLOBALS.aDistances%/s%');",
          "\tallDistances.readEx(function (data) {",
          "    \tif (data.error === TcHmi.Errors.NONE) {",
          "    \t    for(var i = 0; i < 16; i++){",
          "    \t\t   \tif(i % 2 != 0){",
          "\t                switch(x){ ",
          "\t\t\t\t\t\tcase 0:\t                    \t\t\t\t\t\t",
          "\t                \t\tneededDistances.push({LA: `${letters.at(i/2)}: ${data.value[i]}`});",
          "\t\t\t\t\t\tbreak;\t\t\t\t\t\t",
          "\t                \tcase 1:\t                    \t\t\t\t\t\t",
          "\t                \t\tneededDistances.push({LB: `${letters.at(i/2)}: ${data.value[i]}`});",
          "\t\t\t\t\t\tbreak;\t\t\t\t\t\t",
          "\t                \tcase 2:\t                    \t\t\t\t\t\t",
          "\t                \t\tneededDistances.push({LC: `${letters.at(i/2)}: ${data.value[i]}`});",
          "\t\t\t\t\t\tbreak;\t\t\t\t\t\t",
          "\t                \tcase 3:\t                    \t\t\t\t\t\t",
          "\t                \t\tneededDistances.push({LD: `${letters.at(i/2)}: ${data.value[i]}`});",
          "\t\t\t\t\t\tbreak;\t\t\t\t\t\t",
          "\t                \tcase 4:\t                    \t\t\t\t\t\t",
          "\t                \t\tneededDistances.push({LE: `${letters.at(i/2)}: ${data.value[i]}`});",
          "\t\t\t\t\t\tbreak;\t\t\t\t\t\t",
          "\t                \tcase 5:\t                    \t\t\t\t\t\t",
          "\t                \t\tneededDistances.push({LF: `${letters.at(i/2)}: ${data.value[i]}`});",
          "\t\t\t\t\t\tbreak;\t\t\t\t\t\t",
          "\t                \tcase 6:\t                    \t\t\t\t\t\t",
          "\t                \t\tneededDistances.push({LG: `${letters.at(i/2)}: ${data.value[i]}`});",
          "\t\t\t\t\t\tbreak;\t\t\t\t\t\t",
          "\t                \tcase 7:\t                    \t\t\t\t\t\t",
          "\t                \t\tneededDistances.push({LH: `${letters.at(i/2)}: ${data.value[i]}`});",
          "\t\t\t\t\t\tbreak;",
          "\t                }",
          "    \t\t    }",
          "    \t\t}                   \t\t",
          "\t\t}                    \t",
          "\t});",
          "}",
          "for(let i = 0; i < 64; i++){",
          "\tconsole.log(needDistances.at(i));",
          "}\t",
          "TcHmi.Symbol.writeEx('%ctrl%TcHmiDatagrid::SrcData%/ctrl%', JSON.stringify(neededDistances));"
        ],
        "injectContextObject": false,
        "asyncWait": true,
        "waitMode": "Synchronous"
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%TcHmiRegion::TargetContent%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:framework#/definitions/ContentPath",
          "value": "Contents/TableView.content"
        },
        "asyncWait": true
      }
    ]
  }
]
</script>

<script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
{
  "left": 1,
  "right": 1,
  "top": 1,
  "bottom": 1,
  "leftUnit": "px",
  "rightUnit": "px",
  "topUnit": "px",
  "bottomUnit": "px"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
{
  "left": "Solid",
  "right": "Solid",
  "top": "Solid",
  "bottom": "Solid"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-background-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>
</div>
<div id="TcHmiButton_3" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="569" data-tchmi-left-unit="px" data-tchmi-text="Road View" data-tchmi-top="10" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-zindex="1">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_3.onPressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%TcHmiRegion::TargetContent%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:framework#/definitions/ContentPath",
          "value": "Contents/RoadView.content"
        },
        "asyncWait": true
      }
    ]
  }
]
</script>

<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-background-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
{
  "left": "Solid",
  "right": "Solid",
  "top": "Solid",
  "bottom": "Solid"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
{
  "left": 1,
  "right": 1,
  "top": 1,
  "bottom": 1,
  "leftUnit": "px",
  "rightUnit": "px",
  "topUnit": "px",
  "bottomUnit": "px"
}
</script>
</div>
<div id="TcHmiRegion" data-tchmi-type="TcHmi.Controls.System.TcHmiRegion" data-tchmi-height="700" data-tchmi-height-unit="px" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-top="81" data-tchmi-top-unit="px" data-tchmi-width="1097" data-tchmi-width-unit="px">

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiRegion.onInitialized",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%TcHmiRegion::TargetContent%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:framework#/definitions/ContentPath",
          "value": "Contents/RoadView.content"
        },
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiTextblock_13" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="778" data-tchmi-left-unit="px" data-tchmi-top="10" data-tchmi-top-unit="px" data-tchmi-width="150" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text-vertical-alignment="Center" data-tchmi-text-font-size="14" data-tchmi-background-image-horizontal-alignment="Center" data-tchmi-background-image-vertical-alignment="Center" data-tchmi-text="%s%PLC1.TICK.tdSimTime%/s%" data-tchmi-text-font-weight="Auto">

<script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
{
  "left": 1,
  "right": 1,
  "top": 1,
  "bottom": 1,
  "leftUnit": "px",
  "rightUnit": "px",
  "topUnit": "px",
  "bottomUnit": "px"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
{
  "left": "Solid",
  "right": "Solid",
  "top": "Solid",
  "bottom": "Solid"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-background-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>


</div>
<div id="TcHmiTextblock_14" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="928" data-tchmi-left-unit="px" data-tchmi-top="10" data-tchmi-top-unit="px" data-tchmi-width="127" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text-vertical-alignment="Center" data-tchmi-text-font-size="14" data-tchmi-text="%s%PLC1.TICK.nDayOfTheWeek%/s%">
<script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
{
  "left": 1,
  "right": 1,
  "top": 1,
  "bottom": 1,
  "leftUnit": "px",
  "rightUnit": "px",
  "topUnit": "px",
  "bottomUnit": "px"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
{
  "left": "Solid",
  "right": "Solid",
  "top": "Solid",
  "bottom": "Solid"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-background-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>


</div>
</div>