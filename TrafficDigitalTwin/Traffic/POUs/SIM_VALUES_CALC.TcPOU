<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="SIM_VALUES_CALC" Id="{5dcce80c-4a28-4ceb-841b-d37256052b52}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION SIM_VALUES_CALC
VAR
	x, x1, x2, y1, y2, y : REAL;
	rPltMd: REAL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[x := UDINT_TO_REAL(TICK.SimTime);

// TICK already does all the conversions and other necessary logic involving x1 and x2.
x1 := TICK.x1;
x2 := TICK.x2;

IF x < x1 THEN
	x := x + 86400000.0;
END_IF

y1 := CONSTANTS.aTrafficFlowVals[TICK.x1i];
y2 := CONSTANTS.aTrafficFlowVals[TICK.x2i];

y := (y2 - y1) * (x - x1) / (x2 - x1) + y1;

GLOBALS.rModifier := y * CONSTANTS.aTrafficFlowDaysVals[TICK.nDayOfTheWeek];

rPltMd := GLOBALS.rModifier * 0.2; // Platoon modifier; each platoon is 5 cars max

GLOBALS.nWeightAHxL := REAL_TO_INT(CONSTANTS.nBaseWeightL + CONSTANTS.nBaseWeightWAIT * REAL_TO_INT(GLOBALS.nAHxL * rPltMd));
GLOBALS.nWeightAHyL := REAL_TO_INT(CONSTANTS.nBaseWeightL + CONSTANTS.nBaseWeightWAIT * REAL_TO_INT(GLOBALS.nAHyL * rPltMd));
GLOBALS.nWeightBCxL := REAL_TO_INT(CONSTANTS.nBaseWeightL + CONSTANTS.nBaseWeightWAIT * REAL_TO_INT(GLOBALS.nBCxL * rPltMd));
GLOBALS.nWeightBCyL := REAL_TO_INT(CONSTANTS.nBaseWeightL + CONSTANTS.nBaseWeightWAIT * REAL_TO_INT(GLOBALS.nBCyL * rPltMd));
GLOBALS.nWeightDExL := REAL_TO_INT(CONSTANTS.nBaseWeightL + CONSTANTS.nBaseWeightWAIT * REAL_TO_INT(GLOBALS.nDExL * rPltMd));
GLOBALS.nWeightDEyL := REAL_TO_INT(CONSTANTS.nBaseWeightL + CONSTANTS.nBaseWeightWAIT * REAL_TO_INT(GLOBALS.nDEyL * rPltMd));
GLOBALS.nWeightFGxL := REAL_TO_INT(CONSTANTS.nBaseWeightL + CONSTANTS.nBaseWeightWAIT * REAL_TO_INT(GLOBALS.nFGxL * rPltMd));
GLOBALS.nWeightFGyL := REAL_TO_INT(CONSTANTS.nBaseWeightL + CONSTANTS.nBaseWeightWAIT * REAL_TO_INT(GLOBALS.nFGyL * rPltMd));

GLOBALS.nWeightAHxSR := REAL_TO_INT(CONSTANTS.nBaseWeightSR + CONSTANTS.nBaseWeightWAIT * REAL_TO_INT(GLOBALS.nAHxSR * rPltMd));
GLOBALS.nWeightAHySR := REAL_TO_INT(CONSTANTS.nBaseWeightSR + CONSTANTS.nBaseWeightWAIT * REAL_TO_INT(GLOBALS.nAHySR * rPltMd));
GLOBALS.nWeightBCxSR := REAL_TO_INT(CONSTANTS.nBaseWeightSR + CONSTANTS.nBaseWeightWAIT * REAL_TO_INT(GLOBALS.nBCxSR * rPltMd));
GLOBALS.nWeightBCySR := REAL_TO_INT(CONSTANTS.nBaseWeightSR + CONSTANTS.nBaseWeightWAIT * REAL_TO_INT(GLOBALS.nBCySR * rPltMd));
GLOBALS.nWeightDExSR := REAL_TO_INT(CONSTANTS.nBaseWeightSR + CONSTANTS.nBaseWeightWAIT * REAL_TO_INT(GLOBALS.nDExSR * rPltMd));
GLOBALS.nWeightDEySR := REAL_TO_INT(CONSTANTS.nBaseWeightSR + CONSTANTS.nBaseWeightWAIT * REAL_TO_INT(GLOBALS.nDEySR * rPltMd));
GLOBALS.nWeightFGxSR := REAL_TO_INT(CONSTANTS.nBaseWeightSR + CONSTANTS.nBaseWeightWAIT * REAL_TO_INT(GLOBALS.nFGxSR * rPltMd));
GLOBALS.nWeightFGySR := REAL_TO_INT(CONSTANTS.nBaseWeightSR + CONSTANTS.nBaseWeightWAIT * REAL_TO_INT(GLOBALS.nFGySR * rPltMd));]]></ST>
    </Implementation>
    <LineIds Name="SIM_VALUES_CALC">
      <LineId Id="129" Count="0" />
      <LineId Id="124" Count="1" />
      <LineId Id="62" Count="0" />
      <LineId Id="92" Count="0" />
      <LineId Id="134" Count="2" />
      <LineId Id="133" Count="0" />
      <LineId Id="93" Count="6" />
      <LineId Id="145" Count="0" />
      <LineId Id="140" Count="0" />
      <LineId Id="104" Count="16" />
      <LineId Id="23" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>